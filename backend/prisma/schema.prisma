// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Run "npx prisma migrate dev --name UPDATE" when you've made changes to the schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model User {
  id      String @id @default(cuid())
  email   String   @unique
  name    String?
  tasks  Task[] // One-to-many relation with Task
}

model Task {
  id               Int       @id @default(autoincrement()) // Auto-incrementing ID
  userId           String       // Foreign key to User
  title            String    // Title of the task
  completed        Boolean   @default(false) // Default value set to false
  date             DateTime  @default(now()) // Date of task creation or start date
  deadline         DateTime? // Deadline is optional (nullable)
  expectedDuration Int?      // Expected duration in minutes (nullable)
  currentDuration Int?      // Current duration in minutes (nullable)
  
  user User  @relation(fields: [userId], references: [id]) // User relation
  subtasks Subtask[] // One-to-many relation with Subtask
}

model Subtask {
  id               Int       @id @default(autoincrement()) // Auto-incrementing ID
  taskId           Int       // Foreign key to Task
  title            String    // Title of the subtask
  completed        Boolean   @default(false) // Default value set to false
  date             DateTime  // Date of subtask creation
  deadline         DateTime? // Deadline for subtask (nullable)
  expectedDuration Int?      // Expected duration in minutes (nullable)
  currentDuration Int?      // Current duration in minutes (nullable)
  
  task Task @relation(fields: [taskId], references: [id]) // Task relation
}